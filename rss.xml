<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="rss.css" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
<title>Simon's Blog</title>
<description>The ramblings of a mathematician. LaTeX equations will probably turn into jumbo without MathJax, so I suggest you view my posts online. But if you must, here is an RSS feed.</description> <language>en-us</language>
<link>http://simonxiang.xyz/rss.xml</link>
<atom:link href="http://simonxiang.xyz/rss.xml" rel="self" type="application/rss+xml" />

<!-- LB -->

<item>
<title>Want to Subscribe? Use RSS!</title>
<guid>https://simonxiang.xyz/blog_posts.html#want-to-subscribe-use-rss</guid>
<pubDate>Sat, 25 Jul 2020 23:19:16 -0500</pubDate>
<description><![CDATA[
<h2 style="text-align: center"><a href="https://simonxiang.xyz/rss.xml">My RSS Feed</a></h2>

<p>
The best way to keep up with what I'm doing is to periodically check for updates, much like how you periodically run <code>pacman -Syu</code> on your Arch Linux machine. However, the more people you keep up with and the more individual websites you have to visit, the more of a pain this process becomes. Enter RSS feeds.
</p>

<h3>Why Use RSS?</h3>

<p>
RSS feeds functions like social media without the bad parts. Rather than having information centralized in one place (and therefore susceptible to being controlled), all you have to do is add a bunch of RSS feeds (urls) to your RSS reader of choice, and it will aggregate the content for you for easy viewing. This way, you don't have to individually check a bunch of sites, all you have to do is refresh your RSS reader and it will pull all the updates to the feeds you've subscribed to automatically.
</p>

<p>
Of course, it's completely private since all RSS readers do is check for updates to a certain url on someone's page. You can use RSS feeds to replace all sorts of things! For example, you can find RSS feeds for 

<ul type="disc">
<li type="disc">Youtube Channels</li>
<li>Individual Subreddits</li>
<li>Twitter Feeds</li>
<li>Public Facebook Pages</li>
<li>Instagram Feeds</li>
<li>Github Repository Updates</li>
</ul>

and of course, blogs! No longer will you have to subject yourself to involuntary surveillance if all you wanted to do was see what someone is up to— which was the original premise of social media anyway, before the mass centralization of internet content. 
</p>

<h3>Recommendations for an RSS Feed Reader</h3>

<p>
The RSS reader I'm currently using is <a href="https://wiki.archlinux.org/index.php/Newsboat">Newsboat</a> (terminal based, of course), with vim bindings from Luke Smith's config. I'm currently still working on setting everything up, but you can view my progress on <a href="https://github.com/simonxiang1/dotfiles/tree/master/.config/newsboat">GitHub</a> or my <a href="https://git.simonxiang.xyz/dotfiles/file/.config/newsboat/config.html">Git server.</a> Note that for Newsboat to start, you'll need to add at least one RSS feed to your <code>~/.config/newsboat/url</code> file. 
</p>

<p>
Of course, if you're not a fan of terminal based applications, there are graphical RSS readers as well. I haven't used any of them, but the popular choices seem to be <a href="https://www.ghacks.net/2019/07/06/newsflow-is-a-free-customizable-rss-reader-app-for-windows-10/">Newsflow (Windows)</a> and <a href="https://jangernert.github.io/FeedReader/">FeedReader (Unix based systems)</a>.
</p>
]]></description>
</item>








<item>
<title>I'm Never Going to Finish Reading Infinite Jest</title>
<guid>https://simonxiang.xyz/blog_posts.html#im-never-going-to-finish-reading-infinite-jest</guid>
<pubDate>Fri, 24 Jul 2020 22:25:32 -0500</pubDate>
<description><![CDATA[
<p>
The year is 2157. I'm sitting in a room with a book in my hand. No, the room is the book. If you look closely, you can make out the slight imprint of the faded words <span style="font-size: 14px">"Infinite Jest"</span> lining the walls, miniscule page numbers spanning the contents like hieroglyphs. We turn our attention to the rest of the "room". On the ceiling is emptiness: there is no light, or any hope of one. In the corner lie my other books, covered with a thick layer of dust. I desperately reach for my copy of Murakami's <em>Kafka on the Shore</em>, grasping at anything that can bring me comfort. Maybe Nakata can lead me out of this place, to the entrance stone and into an alternate reality. Actually, at this point, I would even be OK with Johnny Walker. I brush off the layer of dust, only to reveal another layer of dust. I open the book— it's all dust. <em>"Unimportant."</em> David Foster Wallace is staring at me from the ceiling. Of course, I should have known. I take my Sailor 1911 and dip it in the ink from the pages of the room, and use it to erase the middle third of the floor. We are on the 141st iteration of the Cantor Ternary set, and I have made a total of $2^{141}-1$ deletions, which follows from a quick proof by induction.
</p>

<p>
Of course, I am already dead, along with all my descendants, their descendants, and their descendants, all the way down to the $10^{38}$th generation. As you can probably tell by now, the year is not 2157. All $e^{e^{87.5}\ln{(2)}}$ of my descendants are cursing me for the day I decided to pick up a copy of <em>Infinite Jest</em> because I heard that David Foster Wallace structured it like the Sierpinski Gasket and included a two-page footnote on the MVT. I reach for the pen— there is no pen. David Foster Wallace is looking into my soul, which is quite easy to do since my body has long since disintegrated away. I too, look into my soul, and see a fine print lightly embroidered along the edges. <span style="font-size: 12px">"Infinite Jest"</span>, it reads. Once again, David Foster Wallace reminds me that there is no hope. As I turn of a page of the wall, a small television in the corner of the ceiling flickers and updates. The television is watching my every move. "40%", it reads. I resign myself to my fate and erase another third of the floor.
</p>
]]></description>
</item>










<item>
<title>Linear Algebra and Its Applications, Part 1: An Introduction</title>
<guid>https://simonxiang.xyz/blog_posts.html#linear-algebra-and-its-applications-part-1-an-introduction</guid>
<pubDate>Thu, 23 Jul 2020 22:04:17 -0500</pubDate>
<description><![CDATA[
<p>
Yes, the title refers to that one horrid textbook that everybody uses. I hope that reading the title brought back some fond memories of your first Linear Algebra course!
</p>

<p>
Welcome to my new series on the many applications of Linear Algebra! I'm not exactly sure which applications I'll cover or how many just yet, but for now I'll just go with the flow. I'm also not much of an applied mathematician, so I'll probably end up writing about the applications of Linear Algebra in other fields of math or something like that. 
</p>

<p>
Linear Algebra pops up seemingly everywhere— if we rephrase "systems of linear equations" as "many equations that seem somewhat straight if you zoom in", it becomes clear why. Here's an inspirational quote:
</p>

<blockquote>
<p>
"Mathematics is about turning difficult problems into Linear Algebra problems."
</p>
<cite style="font-style: normal; font-size: 17px">–Terence Tao</cite>
</blockquote>
<p>
Actually, it probably wasn't Terence Tao who said that. I probably got the quote wrong too. Anywho, you get the point. 
</p>

<p>
Matrix equations will show up all the time if you work in a STEM field, and about half of modern mathematics is built on the theory of vector spaces. It's a fundamental topic everywhere (and should be taught in high schools!) that deserves some special treatment, and so, the birth of this series. Look forward to my first post on image compression with Singular Value Decomposition!
</p>
]]></description>
</item>















<item>
<title>How to Contact Me</title>
<guid>https://simonxiang.xyz/blog_posts.html#how-to-contact-me</guid>
<pubDate>Mon, 20 Jul 2020 22:14:09 -0500</pubDate>
<description><![CDATA[
<h2 style="text-align: center">Email Addresses</h2>

<li style="text-align: center; font-size: 21px"><a href="mailto:simon@simonxiang.xyz">simon@simonxiang.xyz</a></li>
<li style="text-align: center; font-size: 21px"><a href="mailto:simonxiang@utexas.edu">simonxiang@utexas.edu</a></li>
<li style="text-align: center; font-size: 21px"><a href="https://simonxiang.xyz/examples/simonspublickey.gpg">My Public GPG Key</a></li>

<h3>On Cell Phones</h3>

<p>
If you know me in real life, you probably know my cell phone number or someone that has my cell phone number. The quickest way to contact me is by call. I won't respond to texts quickly because my phone doesn't alert me if someone texts— by nature they convey less important information and are more prone to sucking you into a spiral of distraction. I have many other grievances with text messages that I will not air here. If you do insist on using text, it would be nice if you used <a href="https://signal.org">Signal</a> though.
</p>

<h3>On Email</h3>

<p>
The second best way to contact me is by email, which you can find at the top of this post. I've also attached my public GPG key if you want to send me encrypted emails, you can <a href="https://simonxiang.xyz/blog/proving-rsa-encryption-an-application-of-group-theory-part-1-asymmetric-encryption">read</a> <a href="https://simonxiang.xyz/blog/proving-rsa-encryption-an-application-of-group-theory-part-2-fermats-little-theorem-and-ring-theory">my</a> <a href="https://simonxiang.xyz/blog/proving-rsa-encryption-an-application-of-group-theory-part-3-digital-signatures-and-eulers-totient-function">posts on RSA Encryption</a> if you don't know what this is. If you want to contact me for academic purposes, I've listed my UT email address as well. Be aware that Gmail is the email provider for UT, so don't include anything that you wouldn't put on a Times Square billboard in any email you send to my UT email address.
</p>

<p>
If you have the time, I would like you to read <a href="https://www-cs-faculty.stanford.edu/~knuth/email.html">Donald Knuth's epic stance on email</a>. I too, make an effort to be on the bottom of things— although I may not be as cool as Knuth, doing mathematics still requires intense concentration for long periods of time. The average office worker checks their email once every six minutes. If a mathematician was as easily distracted, they wouldn't be able to prove a single thing all day.
</p>

<h3>On Social Media</h3>

<p>
Something I do not have is social media of any kind, including Facebook, Instagram, Reddit, Linkedin, etc. There are a plethora of reasons not to use these services and the reasons to use them are few and far between. Setting the strongest case for not using social media aside (privacy), they cause massive damage in other areas of your life by the concept of instant gratification through dopamine hits. 
</p>

<p>
Everytime you refresh a Facebook page, you're pulling the lever for a slot machine, anticipating the possible arrival of a shiny new burst of dopamine. Your phone will light up at every new like, follow, or text message, all bringing successive and random hits of dopamine. This conditions you to check your phone as often as possible in order to maximize the chance of receiving the next hit sooner. As expected, this is disastrous for our brains and our ability to concentrate and produce meaningful work. If you want to read more on this topic, I highly suggest reading <em>Digital Minimalism</em> by Cal Newport.
</p>

<h3>In Short</h3>

<p>
My email is at the top of the page, and if you know me you most likely have my phone number. Response times will be slow, but it's not a personal thing— if I respond quickly, I'm probably not doing what I'm supposed to be doing. I don't use social media and you shouldn't either— hating social media isn't a boomer exclusive mindset. Finally, thanks for reading this and have a nice day. 
</p>
]]></description>
</item>










<item>
<title>Digital Privacy is Like the Blinds on Your Windows</title>
<guid>https://simonxiang.xyz/blog_posts.html#digital-privacy-is-like-the-blinds-on-your-windows</guid>
<pubDate>Sun, 19 Jul 2020 14:19:23 -0500</pubDate>
<description><![CDATA[
<p>
When I'm at home, I prefer to keep my blinds down, unless the Sun is hitting my window at a good angle. It gives me a sense of security and calm to know that I can do whatever I want without the possibility of anyone scrutinizing my actions. I do things like reading books and taking showers behind the safety of my blinds— it's not like these are inherently immoral acts that need to be kept secret, thus justifying my use of blinds. I just like to be left alone when I'm minding my own business.
</p>

<p>
Some people like keeping their blinds open. They roll them all the way down and proudly declare "I have nothing to hide! Why should I keep my blinds down?" They tell me that trying to keep your blinds down is a waste of time, since you've had them open your entire life anyway. Besides, what's the point of lowering the blinds when you're already being watched? They have a point— their house is made of glass. Everything is transparent from the outside, all the way to their bathroom doors on the second floor.
</p>

<p>
Of course, it is not their fault for buying a transparent house. The three real estate giants, known as Goggle, Pear, and Megasoft have been pushing to make transparent houses an industry standard for years. They market the houses as the "homes of the future", appealing to the consumer using flashy features like "Fingerprint unlock the front door!", "Higher resolution security camera!", and "Better integration with our Smart typewriter and fan!" Of course, they designed the typewriter and fan to fail lest you not have a glass house.
</p>

<p>
At this point, buying a glass house has been normalized. People are waiving away their right to keep the blinds down left and right, for the sake of faster popcorn delivery by drone and convenience. This is not their fault either— the Big Three real estate companies have made it very difficult to find out what you are actually agreeing to when you sign the contract for your new glass house. On the contrary, it is very easy to sign the contract itself, almost too easy, in fact.
</p>

<p>
You didn't know about the microphone planted in your car, the cameras in the corners of the rooms. The smart fridge sends a report of your weekly groceries to Megasoft. The chair is analyzing the weight of each person that sits on it and sends it over to Goggle for "analytics". Of course, all the electronics are always on and recording by default. You have the option to turn them off individually, but there are so many of them that this is a gargantuan task. You don't even have the option to remove them from your house completely. Of course, some have tried prying them from the walls, only to see them reinstalled following the next mandatory "maintanence update". You don't choose when the maintanence updates happen either— the mechanics force open the door, kick you out, and make you sit on your front lawn until they're done.
</p>

<p>
Goggle, Pear, and Megasoft get away with this by not releasing the blueprints to the homes they design. Nobody can really prove the extent that the Big Three spy on us, because their blueprints are private and closely guarded. They have the ability to implement whatever kind of tracking device they want at the drop of a hat, because you don't have the ability to look into the inner workings of your house and decide whether you like what they are doing or not. You signed that right away when you signed up to use the house.
</p>

<p>
Oh, I almost forgot about the tracking device by Pear that is attached to your person at all times. On average, people will spend 5 hours of their day looking at the device, because Pear designed the device to be addictive. It serves the same purpose as an ankle bracelet attached to prisoners, but it sends a little bit more than just your location.  It sends your conversations with friends, sleeping hours, personal library, video game data, everything— it sends it all to Pear. Not only is it virtually impossible to disable the tracking "services", most people actually signed up for this one willingly.
</p>

<p>
Privacy is a fundamental right, not a privilege. With each subsequent invasion of our privacy, the possibility of an Orwellian totalitarian surveillance state becomes more and more real. The government is very happy that we continue to sign our privacy rights away, and is very upset when we resist— just look at what the NSA did to Snowden, and what they're trying to do to the Tor developers. Our world is truly screwed the day building brick-and-mortar houses and closing your blinds becomes illegal. Join me in living in a house that has an open-source blueprint and closing the blinds to stop the peering eyes of The Big Three. Join me in fighting for the right to digital privacy.
</p>
]]></description>
</item>


<item>
<title>Regrettably, This Site Runs Javascript</title>
<guid>https://simonxiang.xyz/blog_posts.html#regrettably-this-site-runs-javascript</guid>
<pubDate>Sat, 18 Jul 2020 17:21:49 -0500</pubDate>
<description><![CDATA[
<p>
I'm really sad. I had a vision for a completely bloat-free website, but now I'm being plagued by the blight that is Javascript because I wanted pretty equations. Every single time someone loads my rolling blog page, it sends 40 something calls to the external MathJax server to generate the LaTeX equations, slowing down the load time by one or two seconds. Unacceptable! I want my stuff to load instantly all the time.
</p>

<p>
I've tried to host an instance of MathJax on my server before, but that means installing a bunch of bloat like Node.js on the server end. Plus, I'm not even sure it'll improve response times by that much. Image based solutions look absolutely horrible. Is there any clean solution to writing pretty equations in HTML? If anybody knows of one, please let a poor and struggling mathematician know.
</p>

<p>
Edit: An additional grievance: <code>\overbrace</code> and <code>\underbrace</code> will break MathJax. It doesn't even compile the rest of your document if you have one of these bad boys in your code! Someone please save me.
</p>
]]></description>
</item>


<item>
<title>Proving RSA Encryption: An Application of Group Theory (Part 3: Digital Signatures and Euler's Totient Function)</title>
<guid>https://simonxiang.xyz/blog_posts.html#proving-rsa-encryption-an-application-of-group-theory-part-3-digital-signatures-and-eulers-totient-function</guid>
<pubDate>Fri, 17 Jul 2020 18:51:10 -0500</pubDate>
<description><![CDATA[
<p>
We've finally proved Fermat's Little Theorem and explained some of the machinery behind groups and rings. Let's continue by defining an important function.
</p>
<p><b><u>Definition</u></b><em> (Euler's Totient Function):</em> Let $\varphi: \mathbb{Z}^+ \to \mathbb{Z}^+$ be defined as $\varphi(n) = $ the number of integers less than or equal to $n$ that are relatively prime to $n$ for $n \in \mathbb{Z}^+. \varphi$ is also known as the <b>Euler phi-function</b>.
</p>

<p>
As you can see, it can be quite hard to procure a general formula for $\varphi(n)$ for all $n$. However, in some cases it is relatively easy— for example, if $n$ is prime, then $\varphi(n)$ is simply $n-1.$ Recall from the last post that the Euler phi-function simply defines the <em>order</em> of the multiplicative group of units $\mathbb{Z}_n^*.$ We now state an important theorem:
</p>
<p><b><u>Theorem</u></b><em> (Euler's Theorem):</em> Let $a \in \mathbb{Z}$ be relatively prime to $n,$ that is, $\text{gcd}(a,n)=1.$ Then 
\[
a^{\varphi(n)} \equiv 1 \, (\text{mod} \, n),
\]
where $\varphi$ denotes the <em><b>Euler phi-function,</b></em> and $n \in \mathbb{Z}^+.$
</p>
<p><b><u>Proof:</u></b> Euler's Theorem is equivalent to the following statement: For all $a \in \mathbb{Z}_n^*$, $a^{\varphi(n)} \equiv 1$ (mod $n$). We know from a previous theorem that any element of a finite group raised to the power of the order of the group is $1.$ Since $|\mathbb{Z}_n^*|=\varphi(n)$, we have 
\[
a^{\varphi(n)} \equiv a^{|\mathbb{Z}_n^*|} \equiv 1 \, (\text{mod} \, n). \quad \boxtimes
\]
</p>

<p>
Notice that the reasoning behind the proof is almost the exact same as the proof of Fermat's Little Theorem: <b>Indeed, Euler's Theorem is simply a <em>generalization</em> of Fermat's Little Theorem—</b> Fermat's Little Theorem simply describes the case where $n$ is prime.
</p>
<p>
Let's calculate $\varphi(n)$ for $n=pq$, where $p$ and $q$ are two prime numbers. We want to find the number of integers less than or equal to $n$ that are relatively prime to $n$. First, note that the number of integers less than or equal to $n$ is $n-1,$ or $pq-1$. We want to subtract the number of integers that have a multiple in common with $n.$ This is what we have so far: 
\[
\varphi(n) = (pq - 1) - ? - ?
\]
 Since $n$ is composed of two prime numbers, this would entail the multiples of $p$ and $q$ (due to the unique factorization of $n$) that are less than $n$, since $n=pq$ is already accounted for. There are $p-1$ multiples of $q$ and $q-1$ multiples of $p$ that are less than or equal to $n$. This makes sense if you think about $n$ this way. Without loss of generality,
 \[
 n = pq = q + \cdots + q
 \]
 $p$ times. Then the distinct numbers
 \begin{align}
     &1:q \\
     &2:q + q \\
     &3:q + q + q \\
     & \vdots \\
     &p-1:q + \cdots + q 
 \end{align}
 are all multiples of $q$ that are less than $n$, hence why we stopped at the term $p-1$. Our goal is find the <em>number</em> of factors of $q$: then there must be $p-1$ factors since the set the set $\{1, 2, 3, \cdots p-1 \}$ has $p-1$ elements. A similar argument holds for the factors of $p$. We have some more information on how $\varphi(n)$ looks now...
 \begin{align}
     \varphi(n) &= (pq - 1) - (p - 1) - (q - 1) \\ 
                &= pq - p - q + 1 \\ 
                &= p(q-1)-(q-1) \\ 
                &= (p-1)(q-1).
 \end{align}
...Oh yeah, it's all coming together. 
</p>

<p>
Now we finally understand the reasoning behind choosing the seemingly arbitary number $(p-1)(q-1)$: it's the <em><b>order of the multiplicative group of integers mod $pq$</b></em>, which means <em><b>any element of $\mathbb{Z}_{pq}$ will reduce to 1 if raised to the power of $(p-1)(q-1)$ modulo $(p-1)(q-1)$ by Euler's Theorem.</b></em> Let us finally prove that pesky lemma from the first post.
</p>
<p><b><u>Lemma:</u></b> Let $n=pq$, where $p$ and $q$ are two distinct primes. If $a$ is an integer relatively prime to $n$ and $w$ is an integer such that $w \equiv 1 \, \text{mod} \, (p-1)(q-1)$, then 
\[
a^w \equiv a \, (\text{mod} \,n).
\]
</p>
<p><b><u>Proof:</u></b> Since $w \equiv 1 \, \text{mod} \,(p-1)(q-1), w = k(p-1)(q-1)+1$ for some $k \in \mathbb{Z}$. So
\begin{align}
    a^w &= a^{k(p-1)(q-1)+1} \\
        &= a^{(p-1)(q-1)^k}a \\
        &= a(a^{\varphi(n)})^k \\ 
        &\equiv a(1)^k \ \small{\text{by Euler's Theorem}} \\
        &= a \, (\text{mod} \, n).
\end{align}
</p>

<p>
With that, we've finally finished the theory behind RSA Encryption. Let's end this series with a real-world application, follow along on your Linux machines everyone! (Disclaimer: This should work on any machine with GPG installed).
</p>

<p>
We can use RSA Encryption to digitally sign messages, that is, generate a signature that anybody with my public key can decrypt, but only I can encrypt. Go ahead and <a href="https://gnupg.org/download" target="_blank">grab yourself of a copy of GnuPG</a>, the program we're going to use to create keys and verify signatures. If you're on Linux, just run 

<pre>
<code>sudo pacman -S gnupg</code>
</pre>

or some variant (if you're using Linux, I hope you know how to install packages).
</p>

<p>
We'll use the same notation as the original post, refer back to it if you need to. Go ahead and download <a href="https://simonxiang.xyz/examples/simonspublickey.gpg">my public key,</a> <a href="https://simonxiang.xyz/examples/hello_world.txt">the message we're going to be verifiying,</a> and <a href="https://simonxiang.xyz/examples/hello_world.sig">the digital signature generated by RSA Encryption.</a> 
</p>

<p>
The algorithm starts by encoding $m$ (hello_world.txt) as an integer. We generate the digital signature by using my <em><b>private key</b></em> and letting the singature equal 
\[
m^s \, (\text{mod} \, n).
\]
The resultant signature is encoded in the file hello_world.sig above. 
</p>

<p>
If you want to generate a GPG key pair and sign a file of your own, go ahead and open your terminal emulator and run 
<pre>
<code>gpg --gen-key</code>
</pre>
and follow the instructions. To generate the digital signature for a file, run 
<pre>
<code>gpg --output file.sig --detach-sig file</code>
</pre>
and replace <code>file.sig</code> with whatever name you want your signature file to be, and <code>file</code> with the file you want to sign. 
</p>

<p>
Now since I used my <em><b>private key</b></em> to sign this file, you'll need my <em><b>public key</b></em> to verify the signature. <code>cd</code> to the directory where you downloaded my public key, and run 
<pre>
<code>gpg --import simonspublickey.gpg</code>
</pre>
to add my public key to your <em><b>keyring</b></em>.
</p>
<p>
We verify the signature works by raising it to the power of $r$ (which is in the public key) to yield 
\[
(m^s)^r \equiv m^{rs} \equiv m \, (\text{mod} \, n)
\]
by our lemma. Isn't that neat? Basically, it compares both the message $m$ and the signature raised to the power of $r$, denoted $(m^s)^r$, and checks to see if the two match— if they do then great, if they don't, then the signature has been compromised/the message has been tampered with since it was sent, and should not be trusted.
</p>

<p>
To follow along on your own machine, <code>cd</code> to the directory you downloaded the files in and run
<pre>
<code>gpg --verify hello_world.sig hello_world.txt</code>
</pre>
Look at the third line of the output, which should read 
<pre>
<code>gpg: Good signature from "Simon ... " [unknown]</code>
</pre>
If it does, then we've successfully verified the digital signature using the steps described. We conclude that I am indeed the author of the message, and that it hasn't been tampered with since publication. (You can ignore the "<code>WARNING: This key is not certified with a trusted signature!</code>" message, it just means I haven't signed my GPG key yet.) 
</p>

<p>
And that's a wrap! If you want to send me encrypted emails, you have my public key now so feel free to do so. Together, we can use the power of math and encryption to protect our content from the peering eyes of the NSA!
</p>
]]></description>
</item>








































<item>
<title>Topological Continuity: Simplicity in Abstraction</title>
<guid>https://simonxiang.xyz/blog_posts.html#topological-continuity-simplicity-in-abstraction</guid>
<pubDate>Sat, 11 Jul 2020 14:05:15 -0500</pubDate>
<description><![CDATA[
<p>Abstraction is often looked down upon by engineers and physicists as something mathematicians do to make life harder for themselves, obfuscate simple things, and make math less applicable in real life.</p> 
<p>However, the opposite is actually true— restricting your viewpoint to one set or space (say, \( \mathbb{R}^n \)) makes things much more complicated than they have to be. <strong>Beauty and simplicity lie in levels of abstraction.</strong> Let's take a look at an example, some prerequisites include basic knowledge of metric spaces and topological spaces. </p>

<p>Here's the standard rigorous definition of continuity from Real Analysis. We say \( f: \mathbb{R} \to \mathbb{R} \) is <b>continuous</b> at \( x_0 \in \mathbb{R} \) if for all \( \epsilon > 0 \), there exists a \( \delta > 0 \) such that 

<p>
\[ 
    |x - x_0| < \delta \implies |f(x)-f(x_0)| < \epsilon 
\]
</p>

for all \( x \in \mathbb{R} \). Of course the domain doesn't have to be \( \mathbb{R} \), it can be any interval, say \( A \). When a function is continuous for all \( x_0 \in A \), it's <em>continuous on</em> \( A \). If a function is continuous on its domain, we just say it's <em>continuous</em>.
</p>

<p> That probably triggered some flashbacks for some poor Calculus students learning about limits for the first time (I too, feared the epsilon-delta dynamic duo up until I took Analysis). It doesn't have to be this scary! Forget the strange Greek letters, let's make this definition more powerful and simple at the same time.</p>

<p> Observe that the absolute value signs are just measuring the <em>distance</em> between two points in $\mathbb{R}$, indeed, this seems like a job more suited for <b>metric spaces</b>. Let $\mathbb{R}$ be equipped with the standard metric $d$ such that $d: \mathbb{R} \times \mathbb{R} \to \mathbb{R}, \, d(x,y) = |x-y|$. You can easily check that $d$ satisfies the conditions for a metric, so $(\mathbb{R},d)$ is a metric space. Now let's rewrite our previous definition in metric terms: \(f: \mathbb{R} \to \mathbb{R} \) is continuous at \( x_0 \in \mathbb{R} \) if for all \( \epsilon > 0 \), there exists a \( \delta > 0 \) such that 

\[
    d(x, x_0) < \delta \implies d(f(x),f(x_0)) < \epsilon.
\]

<p>Recall the definition of an <em>open ball</em> in a metric space. Let $(X,d)$ be a metric space, $x_0 \in X, \gamma \gt 0$. Then we define an <u>open ball</u> as 
\[ B(x_0, \gamma) = \{ x \in X \mid d(x,x_0) < \gamma \}. \]
Intuitively, it's the set of all points a certain distance <em>gamma</em> away from another point $x_0$. Notice that the two expressions in the definition just refer to points $(x \in \mathbb{R})$ a certain positive distance $(\epsilon, \delta)$ away from another point $(x_0)$, hmmm...
\[
    d(x, x_0) < \delta \implies d(f(x),f(x_0)) < \epsilon
\]
implies that 
\[
    x \in B(x_0, \delta) \implies f(x) \in B(f(x_0), \epsilon)
\]
which subsequently implies
\[
    f\left[B(x_0, \delta) \right] \subset B(f(x_0),\epsilon).
\]
The last implication may seem somewhat arcane, but just look closer and you'll see it quickly follows from the definition of the image of a set under a function. But wait! We haven't even seen the final form of continuity yet! Recall that every metric space generates a topology, and that the metric topology is generated by defining open balls as open sets... Now we're ready to define the final layer of abstraction, topological continuity. 
</p>

<p><b><u>Definition:</u></b> Let $(X, \tau_x )$ and $(Y, \tau_y )$ be <em>topological spaces</em>. Then a function $f: X \to Y$ is <b>continuous</b> if for all open sets $H \in \tau_y, \, f^{-1}(H) \in \tau_x.$
</p>

<p>The moment of truth: we transformed a convoluted epsilon delta definition into a simple, elegant, and much more widely applicable statement: <em>"A function is <b>continuous</b> if the pre-image of an open set is open."</em> Not only is this statement much simpler, it also applies to all sorts of spaces— the set of binary sequences, a really long line, co-finite sets, anything. Isn't that great?
</p>
]]></description>
</item>































</channel>
</rss>
